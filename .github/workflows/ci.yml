on: [ push ]

name: ci

env:
  FORCE_COLOR: 3
  TERM: xterm-256color

jobs:
  build:
    name: build (${{ matrix.os }})

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            file-name: nvm
          - os: ubuntu-latest
            file-name: nvm
          - os: windows-latest
            file-name: nvm.exe

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: arduino/setup-task@v1
        with:
          repo-token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly

      - uses: Swatinem/rust-cache@v2

      - run: task build:release

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nvm-${{ matrix.os }}
          path: target/release/${{ matrix.file-name }}

  test:
    timeout-minutes: 15
    continue-on-error: true
    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: arduino/setup-task@v1
        with:
          repo-token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly

      - uses: Swatinem/rust-cache@v2

      - run: task test

  clippy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: arduino/setup-task@v1
        with:
          repo-token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          components: rustfmt, clippy

      - run: task format -- --check

      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
