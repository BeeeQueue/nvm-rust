on:
  workflow_dispatch: 
  push:
    tags:
      - v*

name: release

env:
  FORCE_COLOR: 3
  TERM: xterm-256color

jobs:
#  create-release:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - uses: actions-rs/toolchain@v1
#        with:
#          profile: minimal
#          toolchain: nightly
#          default: true
#
#      - uses: actions/cache@v3
#        with:
#          path: |
#            ~/.cargo/bin
#            ~/.cargo/registry/index
#            ~/.cargo/registry/cache
#            ~/.cargo/git/db
#            ./target
#          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-cargo-build-
#
#      - run: cargo publish
#        env:
#          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
#
#      - uses: softprops/action-gh-release@v1
#        with:
#          draft: true


  build:
    name: build (${{ matrix.os }})

#    needs: [create-release]

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            file-name: nvm-rust
            display-name: nvm-macos
          - os: ubuntu-latest
            file-name: nvm-rust
            display-name: nvm-linux
          - os: windows-latest
            file-name: nvm-rust.exe
            display-name: nvm-win.exe

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - uses: arduino/setup-task@v1
        with:
          repo-token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          default: true

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git/db
            ./target
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-

      - run: task build:release

      - run: mv target/release/${{ matrix.file-name }} target/release/${{ matrix.display-name }}

      - uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: target/release/${{ matrix.display-name }}
